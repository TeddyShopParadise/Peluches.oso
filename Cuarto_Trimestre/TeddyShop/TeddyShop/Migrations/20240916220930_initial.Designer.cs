// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeddyShop.Datos;

#nullable disable

namespace TeddyShop.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240916220930_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CatalogoEmpleado", b =>
                {
                    b.Property<int>("Catalogo_IdCatalogo")
                        .HasColumnType("int");

                    b.Property<int>("Empleado_DniEmpleado")
                        .HasColumnType("int");

                    b.HasKey("Catalogo_IdCatalogo", "Empleado_DniEmpleado");

                    b.ToTable("CatalogoEmpleado");
                });

            modelBuilder.Entity("CatalogoProducto", b =>
                {
                    b.Property<int>("Catalogo_IdCatalogo")
                        .HasColumnType("int");

                    b.Property<int>("Producto_IdProducto")
                        .HasColumnType("int");

                    b.HasKey("Catalogo_IdCatalogo", "Producto_IdProducto");

                    b.ToTable("CatalogoProducto");
                });

            modelBuilder.Entity("Catalogo_Producto", b =>
                {
                    b.Property<int>("Catalogo_IdCatalogo")
                        .HasColumnType("int");

                    b.Property<int>("Producto_IdProducto")
                        .HasColumnType("int");

                    b.HasKey("Catalogo_IdCatalogo", "Producto_IdProducto")
                        .HasName("Catalogo_Producto_PK");

                    b.HasIndex("Producto_IdProducto");

                    b.ToTable("Catalogo_Producto", (string)null);
                });

            modelBuilder.Entity("CategoriaProducto", b =>
                {
                    b.Property<int>("Categoria_IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("Producto_IdProducto")
                        .HasColumnType("int");

                    b.HasKey("Categoria_IdCategoria", "Producto_IdProducto");

                    b.ToTable("CategoriaProducto");
                });

            modelBuilder.Entity("Categoria_Producto", b =>
                {
                    b.Property<int>("Categoria_IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("Producto_IdProducto")
                        .HasColumnType("int");

                    b.HasKey("Categoria_IdCategoria", "Producto_IdProducto")
                        .HasName("Categoria_Producto_PK");

                    b.HasIndex("Producto_IdProducto");

                    b.ToTable("Categoria_Producto", (string)null);
                });

            modelBuilder.Entity("EmpleadoPedido", b =>
                {
                    b.Property<int>("Empleado_DniEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("Pedido_NumPedido")
                        .HasColumnType("int");

                    b.HasKey("Empleado_DniEmpleado", "Pedido_NumPedido");

                    b.ToTable("EmpleadoPedido");
                });

            modelBuilder.Entity("RoleUsuario", b =>
                {
                    b.Property<int>("Roles_IdRol")
                        .HasColumnType("int");

                    b.Property<int>("Usuario_IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Roles_IdRol", "Usuario_IdUsuario");

                    b.ToTable("RoleUsuario");
                });

            modelBuilder.Entity("RolesUsuario", b =>
                {
                    b.Property<int>("Usuario_IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("Roles_IdRol")
                        .HasColumnType("int");

                    b.HasKey("Usuario_IdUsuario", "Roles_IdRol")
                        .HasName("RolesUsuario_PK");

                    b.HasIndex("Roles_IdRol");

                    b.ToTable("RolesUsuario", (string)null);
                });

            modelBuilder.Entity("TeddyShop.Models.Administrador", b =>
                {
                    b.Property<int>("DniEmpleado")
                        .HasColumnType("int");

                    b.HasKey("DniEmpleado")
                        .HasName("Administrador_PK");

                    b.ToTable("Administrador");
                });

            modelBuilder.Entity("TeddyShop.Models.Catalogo", b =>
                {
                    b.Property<int>("IdCatalogo")
                        .HasColumnType("int");

                    b.Property<int>("Compañia_NIT")
                        .HasColumnType("int");

                    b.Property<string>("DisponibilidadCatalogo")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("EstiloCatalogo")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("IdCatalogo")
                        .HasName("Catalogo_PK");

                    b.HasIndex("Compañia_NIT");

                    b.ToTable("Catalogo");
                });

            modelBuilder.Entity("TeddyShop.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<string>("DescripcionCategoria")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("IdCategoria")
                        .HasName("Categoria_PK");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("TeddyShop.Models.Cliente", b =>
                {
                    b.Property<int>("DniCliente")
                        .HasColumnType("int");

                    b.Property<string>("ApelldioCliente")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateOnly>("FechaNaciminetoCliente")
                        .HasColumnType("date");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TelefonoCliente")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("DniCliente")
                        .HasName("Cliente_PK");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("TeddyShop.Models.Compañia", b =>
                {
                    b.Property<int>("NIT")
                        .HasColumnType("int");

                    b.Property<string>("DIreccionEmpresa")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NombreEmpresa")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TelefonoEmpresa")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("NIT")
                        .HasName("Compañia_PK");

                    b.ToTable("Compañia");
                });

            modelBuilder.Entity("TeddyShop.Models.Detalle_Factura", b =>
                {
                    b.Property<int>("NumDetalle")
                        .HasColumnType("int");

                    b.Property<int>("Producto_IdProducto")
                        .HasColumnType("int");

                    b.Property<string>("CantidadDetalleFactura")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("Factura_IdFactura")
                        .HasColumnType("int");

                    b.Property<int>("Inventario_IdInventario")
                        .HasColumnType("int");

                    b.Property<string>("PrecioDetalleFactura")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("NumDetalle", "Producto_IdProducto")
                        .HasName("Detalle_Factura_PK");

                    b.HasIndex("Factura_IdFactura");

                    b.HasIndex("Inventario_IdInventario");

                    b.HasIndex("Producto_IdProducto");

                    b.ToTable("Detalle_Factura");
                });

            modelBuilder.Entity("TeddyShop.Models.Detalle_Pedido", b =>
                {
                    b.Property<int>("NumDetalle")
                        .HasColumnType("int");

                    b.Property<string>("CantidadDetallePedido")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Pedido_NumPedido")
                        .HasColumnType("int");

                    b.Property<string>("PrecioDetallePedido")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Producto_IdProducto")
                        .HasColumnType("int");

                    b.HasKey("NumDetalle")
                        .HasName("Detalle_Pedido_PK");

                    b.HasIndex("Pedido_NumPedido");

                    b.HasIndex("Producto_IdProducto");

                    b.ToTable("Detalle_Pedido");
                });

            modelBuilder.Entity("TeddyShop.Models.Devoluciones", b =>
                {
                    b.Property<decimal>("Devoluciones_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(28, 0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Devoluciones_ID"));

                    b.Property<string>("DetalleDevolucion")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("IdDevolucion")
                        .HasColumnType("int");

                    b.HasKey("Devoluciones_ID")
                        .HasName("Devoluciones_PK");

                    b.ToTable("Devoluciones");
                });

            modelBuilder.Entity("TeddyShop.Models.Empleado", b =>
                {
                    b.Property<int>("DniEmpleado")
                        .HasColumnType("int");

                    b.Property<string>("CodigoEmpleado")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Compañia_NIT")
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaNaciminetoEmpleado")
                        .HasColumnType("date");

                    b.Property<string>("NombreEmpleado")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TelefonoEmpleado")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("DniEmpleado")
                        .HasName("Empleado_PK");

                    b.HasIndex("Compañia_NIT");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("TeddyShop.Models.Factura", b =>
                {
                    b.Property<int>("IdFactura")
                        .HasColumnType("int");

                    b.Property<int>("Cliente_DniCliente")
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaCreacion_Factura")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("HoraCreacion_Factura")
                        .HasColumnType("time");

                    b.Property<int>("Pedido_NumPedido")
                        .HasColumnType("int");

                    b.HasKey("IdFactura")
                        .HasName("Factura_PK");

                    b.HasIndex("Cliente_DniCliente");

                    b.HasIndex("Pedido_NumPedido");

                    b.ToTable("Factura");
                });

            modelBuilder.Entity("TeddyShop.Models.Historial_Precio", b =>
                {
                    b.Property<int>("HistorialPrecioId")
                        .HasColumnType("int");

                    b.Property<int>("Producto_IdProducto")
                        .HasColumnType("int");

                    b.Property<bool>("EstadoPrecio")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("HistorialPrecioId", "Producto_IdProducto")
                        .HasName("Historial_Precio_PK");

                    b.HasIndex("Producto_IdProducto");

                    b.ToTable("Historial_Precio");
                });

            modelBuilder.Entity("TeddyShop.Models.Inventario", b =>
                {
                    b.Property<int>("IdInventario")
                        .HasColumnType("int");

                    b.Property<decimal>("Devoluciones_Devoluciones_ID")
                        .HasColumnType("numeric(28, 0)");

                    b.Property<string>("PrecioCompra")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("PrecioVenta")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Stock")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("StockMaximo")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("StockMinimo")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("IdInventario")
                        .HasName("Inventario_PK");

                    b.HasIndex(new[] { "Devoluciones_Devoluciones_ID" }, "Inventario__IDX")
                        .IsUnique();

                    b.ToTable("Inventario");
                });

            modelBuilder.Entity("TeddyShop.Models.Metodo_Pago", b =>
                {
                    b.Property<int>("NumPago")
                        .HasColumnType("int");

                    b.Property<int>("Factura_IdFactura")
                        .HasColumnType("int");

                    b.Property<string>("NombreMetodoPago")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("NumPago")
                        .HasName("Metodo_Pago_PK");

                    b.HasIndex("Factura_IdFactura");

                    b.ToTable("Metodo_Pago");
                });

            modelBuilder.Entity("TeddyShop.Models.Movimiento", b =>
                {
                    b.Property<int>("Inventario_IdInventario")
                        .HasColumnType("int");

                    b.Property<int>("CantidadIngreso")
                        .HasColumnType("int");

                    b.Property<int>("CantiidadVendida")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("IdMovimiento")
                        .HasColumnType("int");

                    b.HasKey("Inventario_IdInventario")
                        .HasName("Movimiento_PK");

                    b.ToTable("Movimiento");
                });

            modelBuilder.Entity("TeddyShop.Models.Pedido", b =>
                {
                    b.Property<int>("NumPedido")
                        .HasColumnType("int");

                    b.Property<string>("ApellidoAgendador")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ApellidoComprador")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Barrio")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Cliente_DniCliente")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Localidad")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NombreAgendador")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NombreComprador")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NumeroAgendador")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NumeroComprador")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TamañoOso")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("NumPedido")
                        .HasName("Pedido_PK");

                    b.HasIndex("Cliente_DniCliente");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("TeddyShop.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<string>("CmCabezaColaProducto")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("CmColaPataProducto")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("DisponibilidadProducto")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("EstiloProducto")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("MaterialProducto")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TamañoProducto")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("IdProducto")
                        .HasName("Producto_PK");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("TeddyShop.Models.Role", b =>
                {
                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("IdRol")
                        .HasName("Roles_PK");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("TeddyShop.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Empleado_DniEmpleado")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("IdUsuario")
                        .HasName("Usuario_PK");

                    b.HasIndex(new[] { "Empleado_DniEmpleado" }, "Usuario__IDX")
                        .IsUnique();

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("TeddyShop.Models.Vendedor", b =>
                {
                    b.Property<int>("DniEmpleado")
                        .HasColumnType("int");

                    b.Property<string>("CodigoVendedor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DniEmpleado")
                        .HasName("Vendedor_PK");

                    b.HasIndex(new[] { "CodigoVendedor" }, "Vendedor_PKv1")
                        .IsUnique();

                    b.ToTable("Vendedor");
                });

            modelBuilder.Entity("Vendedor_Catalogo", b =>
                {
                    b.Property<int>("Empleado_DniEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("Catalogo_IdCatalogo")
                        .HasColumnType("int");

                    b.HasKey("Empleado_DniEmpleado", "Catalogo_IdCatalogo")
                        .HasName("Vendedor_Catalogo_PK");

                    b.HasIndex("Catalogo_IdCatalogo");

                    b.ToTable("Vendedor_Catalogo", (string)null);
                });

            modelBuilder.Entity("Vendedor_Pedido", b =>
                {
                    b.Property<int>("Empleado_DniEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("Pedido_NumPedido")
                        .HasColumnType("int");

                    b.HasKey("Empleado_DniEmpleado", "Pedido_NumPedido")
                        .HasName("Vendedor_Pedido_PK");

                    b.HasIndex("Pedido_NumPedido");

                    b.ToTable("Vendedor_Pedido", (string)null);
                });

            modelBuilder.Entity("Catalogo_Producto", b =>
                {
                    b.HasOne("TeddyShop.Models.Catalogo", null)
                        .WithMany()
                        .HasForeignKey("Catalogo_IdCatalogo")
                        .IsRequired()
                        .HasConstraintName("Catalogo_Producto_Catalogo_FK");

                    b.HasOne("TeddyShop.Models.Producto", null)
                        .WithMany()
                        .HasForeignKey("Producto_IdProducto")
                        .IsRequired()
                        .HasConstraintName("Catalogo_Producto_Producto_FK");
                });

            modelBuilder.Entity("Categoria_Producto", b =>
                {
                    b.HasOne("TeddyShop.Models.Categoria", null)
                        .WithMany()
                        .HasForeignKey("Categoria_IdCategoria")
                        .IsRequired()
                        .HasConstraintName("Categoria_Producto_Categoria_FK");

                    b.HasOne("TeddyShop.Models.Producto", null)
                        .WithMany()
                        .HasForeignKey("Producto_IdProducto")
                        .IsRequired()
                        .HasConstraintName("Categoria_Producto_Producto_FK");
                });

            modelBuilder.Entity("RolesUsuario", b =>
                {
                    b.HasOne("TeddyShop.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("Roles_IdRol")
                        .IsRequired()
                        .HasConstraintName("RolesUsuario_Roles_FK");

                    b.HasOne("TeddyShop.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("Usuario_IdUsuario")
                        .IsRequired()
                        .HasConstraintName("RolesUsuario_Usuario_FK");
                });

            modelBuilder.Entity("TeddyShop.Models.Administrador", b =>
                {
                    b.HasOne("TeddyShop.Models.Empleado", "DniEmpleadoNavigation")
                        .WithOne("Administrador")
                        .HasForeignKey("TeddyShop.Models.Administrador", "DniEmpleado")
                        .IsRequired()
                        .HasConstraintName("Administrador_Empleado_FK");

                    b.Navigation("DniEmpleadoNavigation");
                });

            modelBuilder.Entity("TeddyShop.Models.Catalogo", b =>
                {
                    b.HasOne("TeddyShop.Models.Compañia", "Compañia_NITNavigation")
                        .WithMany("Catalogos")
                        .HasForeignKey("Compañia_NIT")
                        .IsRequired()
                        .HasConstraintName("Catalogo_Compañia_FK");

                    b.Navigation("Compañia_NITNavigation");
                });

            modelBuilder.Entity("TeddyShop.Models.Detalle_Factura", b =>
                {
                    b.HasOne("TeddyShop.Models.Factura", "Factura_IdFacturaNavigation")
                        .WithMany("Detalle_Facturas")
                        .HasForeignKey("Factura_IdFactura")
                        .IsRequired()
                        .HasConstraintName("Detalle_Factura_Factura_FK");

                    b.HasOne("TeddyShop.Models.Inventario", "Inventario_IdInventarioNavigation")
                        .WithMany("Detalle_Facturas")
                        .HasForeignKey("Inventario_IdInventario")
                        .IsRequired()
                        .HasConstraintName("Detalle_Factura_Inventario_FK");

                    b.HasOne("TeddyShop.Models.Producto", "Producto_IdProductoNavigation")
                        .WithMany("Detalle_Facturas")
                        .HasForeignKey("Producto_IdProducto")
                        .IsRequired()
                        .HasConstraintName("Detalle_Factura_Producto_FK");

                    b.Navigation("Factura_IdFacturaNavigation");

                    b.Navigation("Inventario_IdInventarioNavigation");

                    b.Navigation("Producto_IdProductoNavigation");
                });

            modelBuilder.Entity("TeddyShop.Models.Detalle_Pedido", b =>
                {
                    b.HasOne("TeddyShop.Models.Pedido", "Pedido_NumPedidoNavigation")
                        .WithMany("Detalle_Pedidos")
                        .HasForeignKey("Pedido_NumPedido")
                        .IsRequired()
                        .HasConstraintName("Detalle_Pedido_Pedido_FK");

                    b.HasOne("TeddyShop.Models.Producto", "Producto_IdProductoNavigation")
                        .WithMany("Detalle_Pedidos")
                        .HasForeignKey("Producto_IdProducto")
                        .IsRequired()
                        .HasConstraintName("Detalle_Pedido_Producto_FK");

                    b.Navigation("Pedido_NumPedidoNavigation");

                    b.Navigation("Producto_IdProductoNavigation");
                });

            modelBuilder.Entity("TeddyShop.Models.Empleado", b =>
                {
                    b.HasOne("TeddyShop.Models.Compañia", "Compañia_NITNavigation")
                        .WithMany("Empleados")
                        .HasForeignKey("Compañia_NIT")
                        .IsRequired()
                        .HasConstraintName("Empleado_Compañia_FK");

                    b.Navigation("Compañia_NITNavigation");
                });

            modelBuilder.Entity("TeddyShop.Models.Factura", b =>
                {
                    b.HasOne("TeddyShop.Models.Cliente", "Cliente_DniClienteNavigation")
                        .WithMany("Facturas")
                        .HasForeignKey("Cliente_DniCliente")
                        .IsRequired()
                        .HasConstraintName("Factura_Cliente_FK");

                    b.HasOne("TeddyShop.Models.Pedido", "Pedido_NumPedidoNavigation")
                        .WithMany("Facturas")
                        .HasForeignKey("Pedido_NumPedido")
                        .IsRequired()
                        .HasConstraintName("Factura_Pedido_FK");

                    b.Navigation("Cliente_DniClienteNavigation");

                    b.Navigation("Pedido_NumPedidoNavigation");
                });

            modelBuilder.Entity("TeddyShop.Models.Historial_Precio", b =>
                {
                    b.HasOne("TeddyShop.Models.Producto", "Producto_IdProductoNavigation")
                        .WithMany("Historial_Precios")
                        .HasForeignKey("Producto_IdProducto")
                        .IsRequired()
                        .HasConstraintName("Historial_Precio_Producto_FK");

                    b.Navigation("Producto_IdProductoNavigation");
                });

            modelBuilder.Entity("TeddyShop.Models.Inventario", b =>
                {
                    b.HasOne("TeddyShop.Models.Devoluciones", "Devoluciones_Devoluciones")
                        .WithOne("Inventario")
                        .HasForeignKey("TeddyShop.Models.Inventario", "Devoluciones_Devoluciones_ID")
                        .IsRequired()
                        .HasConstraintName("Inventario_Devoluciones_FK");

                    b.Navigation("Devoluciones_Devoluciones");
                });

            modelBuilder.Entity("TeddyShop.Models.Metodo_Pago", b =>
                {
                    b.HasOne("TeddyShop.Models.Factura", "Factura_IdFacturaNavigation")
                        .WithMany("Metodo_Pagos")
                        .HasForeignKey("Factura_IdFactura")
                        .IsRequired()
                        .HasConstraintName("Metodo_Pago_Factura_FK");

                    b.Navigation("Factura_IdFacturaNavigation");
                });

            modelBuilder.Entity("TeddyShop.Models.Movimiento", b =>
                {
                    b.HasOne("TeddyShop.Models.Inventario", "Inventario_IdInventarioNavigation")
                        .WithOne("Movimiento")
                        .HasForeignKey("TeddyShop.Models.Movimiento", "Inventario_IdInventario")
                        .IsRequired()
                        .HasConstraintName("Movimiento_Inventario_FK");

                    b.Navigation("Inventario_IdInventarioNavigation");
                });

            modelBuilder.Entity("TeddyShop.Models.Pedido", b =>
                {
                    b.HasOne("TeddyShop.Models.Cliente", "Cliente_DniClienteNavigation")
                        .WithMany("Pedidos")
                        .HasForeignKey("Cliente_DniCliente")
                        .IsRequired()
                        .HasConstraintName("Pedido_Cliente_FK");

                    b.Navigation("Cliente_DniClienteNavigation");
                });

            modelBuilder.Entity("TeddyShop.Models.Usuario", b =>
                {
                    b.HasOne("TeddyShop.Models.Empleado", "Empleado_DniEmpleadoNavigation")
                        .WithOne("Usuario")
                        .HasForeignKey("TeddyShop.Models.Usuario", "Empleado_DniEmpleado")
                        .IsRequired()
                        .HasConstraintName("Usuario_Empleado_FK");

                    b.Navigation("Empleado_DniEmpleadoNavigation");
                });

            modelBuilder.Entity("TeddyShop.Models.Vendedor", b =>
                {
                    b.HasOne("TeddyShop.Models.Empleado", "DniEmpleadoNavigation")
                        .WithOne("Vendedor")
                        .HasForeignKey("TeddyShop.Models.Vendedor", "DniEmpleado")
                        .IsRequired()
                        .HasConstraintName("Vendedor_Empleado_FK");

                    b.Navigation("DniEmpleadoNavigation");
                });

            modelBuilder.Entity("Vendedor_Catalogo", b =>
                {
                    b.HasOne("TeddyShop.Models.Catalogo", null)
                        .WithMany()
                        .HasForeignKey("Catalogo_IdCatalogo")
                        .IsRequired()
                        .HasConstraintName("Vendedor_Catalogo_Catalogo_FK");

                    b.HasOne("TeddyShop.Models.Empleado", null)
                        .WithMany()
                        .HasForeignKey("Empleado_DniEmpleado")
                        .IsRequired()
                        .HasConstraintName("Vendedor_Catalogo_Empleado_FK");
                });

            modelBuilder.Entity("Vendedor_Pedido", b =>
                {
                    b.HasOne("TeddyShop.Models.Empleado", null)
                        .WithMany()
                        .HasForeignKey("Empleado_DniEmpleado")
                        .IsRequired()
                        .HasConstraintName("Vendedor_Pedido_Empleado_FK");

                    b.HasOne("TeddyShop.Models.Pedido", null)
                        .WithMany()
                        .HasForeignKey("Pedido_NumPedido")
                        .IsRequired()
                        .HasConstraintName("Vendedor_Pedido_Pedido_FK");
                });

            modelBuilder.Entity("TeddyShop.Models.Cliente", b =>
                {
                    b.Navigation("Facturas");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("TeddyShop.Models.Compañia", b =>
                {
                    b.Navigation("Catalogos");

                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("TeddyShop.Models.Devoluciones", b =>
                {
                    b.Navigation("Inventario");
                });

            modelBuilder.Entity("TeddyShop.Models.Empleado", b =>
                {
                    b.Navigation("Administrador");

                    b.Navigation("Usuario");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("TeddyShop.Models.Factura", b =>
                {
                    b.Navigation("Detalle_Facturas");

                    b.Navigation("Metodo_Pagos");
                });

            modelBuilder.Entity("TeddyShop.Models.Inventario", b =>
                {
                    b.Navigation("Detalle_Facturas");

                    b.Navigation("Movimiento");
                });

            modelBuilder.Entity("TeddyShop.Models.Pedido", b =>
                {
                    b.Navigation("Detalle_Pedidos");

                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("TeddyShop.Models.Producto", b =>
                {
                    b.Navigation("Detalle_Facturas");

                    b.Navigation("Detalle_Pedidos");

                    b.Navigation("Historial_Precios");
                });
#pragma warning restore 612, 618
        }
    }
}
